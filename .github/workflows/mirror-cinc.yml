name: Mirror Cinc Packages to GHCR
on:
  workflow_dispatch:
    inputs:
      min_version:
        description: "Minimum version to mirror (default: 18)"
        required: false
        default: "18"

jobs:
  mirror:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Make scripts executable
        run: |
          chmod +x mirror-cinc.sh
          chmod +x security-incident-response.sh

      - name: Install dependencies
        run: |
          echo "üì¶ Installing required dependencies..."

          # Install ORAS for OCI artifact management
          echo "Installing ORAS..."

          # Install fixed ORAS version for reproducibility
          ORAS_VERSION="v1.3.0"
          echo "Installing ORAS version: $ORAS_VERSION"

          # Try tarball first
          if curl -f -L -o oras.tar.gz "https://github.com/oras-project/oras/releases/download/${ORAS_VERSION}/oras_${ORAS_VERSION#v}_linux_amd64.tar.gz"; then
            echo "Downloaded ORAS tar.gz"
            mkdir -p oras-install/
            tar -zxf oras.tar.gz -C oras-install/ 2>/dev/null || tar -xf oras.tar.gz -C oras-install/
            if [ -f "oras-install/oras" ]; then
              sudo mv oras-install/oras /usr/local/bin/oras
              rm -rf oras-install/ oras.tar.gz
              ORAS_INSTALLED=true
            fi
          fi

            # Fallback: direct binary if tarball extraction failed
          if [ "$ORAS_INSTALLED" != "true" ]; then
            if curl -f -L -o oras "https://github.com/oras-project/oras/releases/download/${ORAS_VERSION}/oras_${ORAS_VERSION#v}_linux_amd64"; then
              echo "Downloaded ORAS binary"
              chmod +x oras
              sudo mv oras /usr/local/bin/oras
              ORAS_INSTALLED=true
            fi
          fi

          if [ "$ORAS_INSTALLED" != "true" ]; then
            echo "‚ùå Failed to install ORAS version $ORAS_VERSION"
            echo "Check https://github.com/oras-project/oras/releases for newer releases."
            exit 1
          fi

          # Verify installations
          echo "Verifying installations..."
          if command -v oras >/dev/null 2>&1; then
            oras version
            echo "‚úÖ ORAS installed successfully"
          else
            echo "‚ùå ORAS installation verification failed"
            exit 1
          fi

          echo "‚úÖ All dependencies installed successfully"

      - name: Set mirror configuration
        id: config
        run: |
          # Set default values
          MIN_VERSION="18"

          # Override with input if provided
          if [ "${{ github.event_name }}" = "workflow_dispatch" ] && [ -n "${{ github.event.inputs.min_version }}" ]; then
            MIN_VERSION="${{ github.event.inputs.min_version }}"
          fi

          echo "min_version=$MIN_VERSION" >> $GITHUB_OUTPUT
          echo "Using minimum version: $MIN_VERSION"

      - name: Run Cinc mirror script
        env:
          GHCR_ORG: ${{ github.repository_owner }}
          GHCR_REPO: cinc-mirror
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          MIRROR_DIR: ./cinc-mirror
          MIN_VERSION: ${{ steps.config.outputs.min_version }}
          TARGET_DISTROS: debian
          FTP_BASE: ftps://downloads.cinc.sh/pub/cinc/files/stable/cinc
        run: |
          echo "üöÄ Starting Cinc mirror process..."
          echo "GHCR_ORG: $GHCR_ORG"
          echo "MIN_VERSION: $MIN_VERSION"
          echo "TARGET_DISTROS: $TARGET_DISTROS"

          # Run the mirror script with error output
          if ./mirror-cinc.sh 2>&1; then
            echo "‚úÖ Mirror process completed successfully"
          else
            echo "‚ùå Mirror process failed"
            exit 1
          fi
