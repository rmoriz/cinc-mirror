name: Delete Cinc Packages (rmoriz/cinc-packages)

# This workflow deletes all versions of the cinc-packages container package
# from the rmoriz personal GitHub account. Use with caution!

on:
  workflow_dispatch:
    inputs:
      confirm:
        description: 'Type "DELETE_CINC_PACKAGES" to confirm deletion of all cinc-packages from rmoriz account'
        required: true
        type: string

jobs:
  delete-packages:
    runs-on: ubuntu-latest
    permissions:
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Authenticate with GitHub
        run: |
          echo "${{ secrets.GITHUB_TOKEN }}" | gh auth login --with-token

      - name: Confirm deletion
        run: |
          if [ "${{ github.event.inputs.confirm }}" != "DELETE_CINC_PACKAGES" ]; then
            echo "Confirmation failed. Expected 'DELETE_CINC_PACKAGES' but got '${{ github.event.inputs.confirm }}'."
            exit 1
          fi

      - name: Delete all packages
        run: |
          USER="rmoriz"
          PACKAGE_NAME="cinc-packages"
          PACKAGE_TYPE="container"

          echo "Listing packages for user: $USER"

          # Get package details (user packages don't have IDs like org packages)
          PACKAGE_INFO=$(gh api "/users/$USER/packages?package_type=$PACKAGE_TYPE" --jq ".[] | select(.name == \"$PACKAGE_NAME\")" || echo "")

          if [ -z "$PACKAGE_INFO" ]; then
            echo "Package $PACKAGE_NAME not found for user $USER."
            exit 0
          fi

          echo "Found package: $PACKAGE_NAME"

          # List versions
          VERSIONS=$(gh api "/users/$USER/packages/$PACKAGE_TYPE/$PACKAGE_NAME/versions" --jq '.[].id' || echo "")

          if [ -z "$VERSIONS" ]; then
            echo "No versions found for package $PACKAGE_NAME."
            exit 0
          fi

          echo "Found $(echo "$VERSIONS" | wc -l) versions to delete"

          # Delete each version
          for VERSION_ID in $VERSIONS; do
            echo "Deleting version ID: $VERSION_ID"
            if gh api -X DELETE "/users/$USER/packages/$PACKAGE_TYPE/$PACKAGE_NAME/versions/$VERSION_ID"; then
              echo "Successfully deleted version ID: $VERSION_ID"
            else
              echo "Failed to delete version ID: $VERSION_ID (may already be deleted)"
            fi
          done

          echo "All versions of $PACKAGE_NAME deleted from user $USER account."