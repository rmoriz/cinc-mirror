name: Delete Cinc Packages (rmoriz/cinc-packages)

# This workflow deletes all versions of the cinc-packages container package
# from the rmoriz personal GitHub account. Use with caution!

on:
  workflow_dispatch:

jobs:
  delete-packages:
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Delete all packages
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          USER="rmoriz"
          PACKAGE_NAME="cinc-packages/cinc"
          PACKAGE_TYPE="container"

          echo "Searching for package: $PACKAGE_NAME for user: $USER"

          # First try the user packages API
          echo "Attempting to delete package directly..."
          
          # Try to list versions directly
          ENCODED_PACKAGE_NAME=$(echo "$PACKAGE_NAME" | sed 's|/|%2F|g')
          echo "Encoded package name: $ENCODED_PACKAGE_NAME"
          
          if gh api "/users/$USER/packages/$PACKAGE_TYPE/$ENCODED_PACKAGE_NAME/versions" --jq '.[].id' > /tmp/versions 2>/dev/null; then
            echo "Found package versions:"
            cat /tmp/versions
            
            VERSION_COUNT=$(wc -l < /tmp/versions)
            echo "Found $VERSION_COUNT versions to delete"

            # Delete each version
            while read -r VERSION_ID; do
              if [ -n "$VERSION_ID" ] && [[ "$VERSION_ID" =~ ^[0-9]+$ ]]; then
                echo "Deleting version ID: $VERSION_ID"
                if gh api -X DELETE "/users/$USER/packages/$PACKAGE_TYPE/$ENCODED_PACKAGE_NAME/versions/$VERSION_ID" 2>/dev/null; then
                  echo "Successfully deleted version ID: $VERSION_ID"
                else
                  echo "Failed to delete version ID: $VERSION_ID (may already be deleted)"
                fi
              else
                echo "Skipping invalid version ID: $VERSION_ID"
              fi
            done < /tmp/versions
          else
            echo "Could not access package versions - trying alternative approach"
            
            # Try using the repository packages API
            echo "Trying repository packages API..."
            REPO_OWNER="rmoriz"
            REPO_NAME="cinc-mirror"
            
            if gh api "/repos/$REPO_OWNER/$REPO_NAME/packages?package_type=$PACKAGE_TYPE" --jq ".[] | select(.name == \"$PACKAGE_NAME\") | .id" > /tmp/package_id 2>/dev/null; then
              PACKAGE_ID=$(cat /tmp/package_id)
              echo "Found package ID: $PACKAGE_ID"
              
              if gh api "/repos/$REPO_OWNER/$REPO_NAME/packages/$PACKAGE_TYPE/$PACKAGE_ID/versions" --jq '.[].id' > /tmp/versions 2>/dev/null; then
                echo "Found package versions via repository API:"
                cat /tmp/versions
                
                VERSION_COUNT=$(wc -l < /tmp/versions)
                echo "Found $VERSION_COUNT versions to delete"

                # Delete each version
                while read -r VERSION_ID; do
                  if [ -n "$VERSION_ID" ] && [[ "$VERSION_ID" =~ ^[0-9]+$ ]]; then
                    echo "Deleting version ID: $VERSION_ID"
                    if gh api -X DELETE "/repos/$REPO_OWNER/$REPO_NAME/packages/$PACKAGE_TYPE/$PACKAGE_ID/versions/$VERSION_ID" 2>/dev/null; then
                      echo "Successfully deleted version ID: $VERSION_ID"
                    else
                      echo "Failed to delete version ID: $VERSION_ID (may already be deleted)"
                    fi
                  else
                    echo "Skipping invalid version ID: $VERSION_ID"
                  fi
                done < /tmp/versions
              else
                echo "Could not access package versions via repository API either"
              fi
            else
              echo "Package not found in repository packages"
            fi
          fi

          # Clean up temp files
          rm -f /tmp/package_info /tmp/versions /tmp/package_id

          echo "All versions of $PACKAGE_NAME processed for user $USER account."